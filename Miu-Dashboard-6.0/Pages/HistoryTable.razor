@page "/table/{guildId:long}"
@using Microsoft.EntityFrameworkCore
@using Miu_Dashboard_6._0.models
@using Miu_Dashboard_6._0.Utils
@using SortDirection = MudBlazor.SortDirection

@inject IDbContextFactory<miudiscordbotContext> _dbFactory

<PageTitle>History</PageTitle>

<MudTable Items="@Elements" Hover="true" SortLabel="Sort By" FixedHeader="true" Filter="new Func<History,bool>(FilterFunc1)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">History</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<History, object>(x=>Utils.JavaTimeStampToDateTime(x.DateTime))" InitialDirection="SortDirection.Descending">Date and Time</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<History, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<History, object>(x => x.Link)">Link</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<History, object>(x=> x.UserId)" InitialDirection="SortDirection.Descending">Queued by</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<History, object>(x => x.Queued)"> Currently queued</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<History, object>(x => x.Played)">Played</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date and Time">@(Utils.JavaTimeStampToDateTime(context.DateTime).ToString("dd.MM.yyyy HH:mm:ss"))"</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Link"><a href="@context.Link" target="_blank">@context.Link</a></MudTd>
        <MudTd DataLabel="Queued by">@context.UserId</MudTd>
        <MudTd DataLabel="Currently queued"><i class="@(!context.Queued ? "fas fa-times" : "fas fa-check")"></i></MudTd>
        <MudTd DataLabel="Played"><i class="@(!context.Played ? "fas fa-times" : "fas fa-check")"></i></MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code
{
    [Parameter]
    public long guildId { get; set; } = 1;

    private string searchString1 = "";

    private IEnumerable<History> Elements;

    private System.Timers.Timer timer;

    protected override async Task OnInitializedAsync()
    {
        var context = await _dbFactory.CreateDbContextAsync();
        Elements = context.Histories.Where(x => x.GuildId == guildId).ToList();
    }

    private bool FilterFunc1(History element) => FilterFunc(element, searchString1);

    private static bool FilterFunc(History element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Link.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (Utils.JavaTimeStampToDateTime(element.DateTime).ToString("dd.MM.yyyy HH:mm:ss").Contains(searchString))
            return true;
        if (element.UserId != null && element.UserId.ToString()!.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}