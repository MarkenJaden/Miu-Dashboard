@page "/table/{guildId:long}"
@using Microsoft.EntityFrameworkCore
@using Miu_Dashboard_6._0.models
@using Miu_Dashboard_6._0.Utils
@using SortDirection = MudBlazor.SortDirection

@inject IDbContextFactory<miudiscordbotContext> _dbFactory
@inject NavigationManager _nav
@inject IJSRuntime _jsRuntime

<PageTitle>History</PageTitle>

@{
    var dbContext = _dbFactory.CreateDbContext();
}

@*<div class="container-fluid">*@

    <MudTable Items="dbContext.Histories.Where(x => x.GuildId == guildId).ToList().OrderByDescending(history => Utils.JavaTimeStampToDateTime(history.DateTime))" Hover="true" SortLabel="Sort By" FixedHeader="true" Filter="new Func<History,bool>(FilterFunc1)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">History</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel T="string">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="string">Link</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="bool">Currently queued</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="bool">Played</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="DateTime" InitialDirection="SortDirection.Descending">Date and Time</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Link"><a href="@context.Link" target="_blank">@context.Link</a></MudTd>
            <MudTd DataLabel="Currently queued"><i class="@(!context.Queued ? "fas fa-times" : "fas fa-check")"></i></MudTd>
            <MudTd DataLabel="Played"><i class="@(!context.Played ? "fas fa-times" : "fas fa-check")"></i></MudTd>
            <MudTd DataLabel="Date and Time">@(Utils.JavaTimeStampToDateTime(context.DateTime).ToString("dd.MM.yyyy HH:mm:ss"))"</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

@*</div>*@

@code
{
    [Parameter]
    public long guildId { get; set; } = 1;

    private string searchString1 = "";

    ITable table;

    private System.Timers.Timer timer;

    private bool FilterFunc1(History element) => FilterFunc(element, searchString1);

    private bool FilterFunc(History element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Link.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (Utils.JavaTimeStampToDateTime(element.DateTime).ToString("dd.MM.yyyy HH:mm:ss").Contains(searchString))
            return true;
        return false;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        timer = new(2000);
        timer.Elapsed += (_, _) =>
        {
            table.ReloadData();
            InvokeAsync(StateHasChanged);
        };
        timer.AutoReset = true;
        timer.Enabled = true;
    }
}